\select@language {english}
\select@language {german}
\select@language {english}
\addvspace {10\p@ }
\select@language {german}
\addvspace {10\p@ }
\select@language {english}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Depiction of the theoretical definitions of system, model, metamodel, meta-metamodel and modeling language. Like stated before, a system is abstracted by models, which themselves are abstracted by meta-models and so forth. A model used to specify (see the model definition) has a red line binding it and its SUS labeled with the identifier of the respective modeling language.\relax }}{23}{figure.caption.1}
\contentsline {figure}{\numberline {2.2}{\ignorespaces A more concrete and practical illustration of the definitions of system, model, metamodel, meta-metamodel and modeling language. This example shows a scenario very close to the implementation made in [LINK CHAPTER MODEl]\relax }}{24}{figure.caption.2}
\contentsline {figure}{\numberline {2.3}{\ignorespaces An example of a network of models very similar to the one developed in this work.\relax }}{24}{figure.caption.3}
\contentsline {figure}{\numberline {2.4}{\ignorespaces Essential MOF definition, which handles basically classes, properties, operations, associations, and generalization.\relax }}{25}{figure.caption.4}
\contentsline {figure}{\numberline {2.5}{\ignorespaces Ecore definition illustrating the use of classes, attributes, operations, references and super types, analougously to the figure [LINK EMOF FIG]\relax }}{26}{figure.caption.5}
\contentsline {figure}{\numberline {2.6}{\ignorespaces The morphism $m: G \rightarrow H$ is a triple graph $m = (m_s,m_c,m_t)$.\relax }}{27}{figure.caption.6}
\contentsline {figure}{\numberline {2.7}{\ignorespaces TRIPLE GRAPH, TRIPLE RULE, TRIPLE AXIOM, explain ++\relax }}{27}{figure.caption.7}
\contentsline {figure}{\numberline {2.8}{\ignorespaces Illustration of the definitions model relation, transformation and synchronization as well as triple graph grammars (TGG). Relations between metamodels are coded by triple grammars; modifications in the models are coded by triple rules, which are then organized in a TGG. A TGG is interpreted as operational semantic definitions and executed according to the models. Again the concept of modeling language is pictured as red lines.\relax }}{27}{figure.caption.8}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
