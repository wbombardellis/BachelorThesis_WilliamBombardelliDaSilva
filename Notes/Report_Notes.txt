Java.ecore from JaMopp (https://github.com/DevBoost/JaMoPP/tree/master/Core/org.emftext.language.java/metamodel. 13.Nov2015)
UML from OMG website (http://www.omg.org/spec/MOF/2.4.1/, 13.Nov.2015)
Ecore metamodel from Eclipse EMF plugin (https://github.com/cloudsmith/org.eclipse.emf, 13 Nov. 2015)

Java.ecore: replace :....layout.ecore to primitiveTypes.ecore
Rename the ecore metamodel to primitiveTypes.ecore

-Enhancements/Future Work
These metamodels should be available online with easy access
Polynomial time execution?
How about efficiency?
Translate TGG to ATL



=======Eclipse Mars for Model developing========
-Install EMF Compare?
-Install Ecore Tools
-Install Mote Plugin (http://download.eclipse.org/ecoretools/updates/releases/3.0.1/mars) (With errors?)
-New Mote Project without any source or target meta model
-In .ecore file created by default load resource (choose your source and target ecore metamodels)
-These metamodels can be visualized by right-clicking, Initialize Ecore Diagram, then adding models in the graphical editor and arranging them
-Ctrl+o to search
-Now on the mltgg file initialize the mltgg_diagram file (One diagram file for each rule group; and one rule for each rule group)
-Load resources (Source and target metamodels)
-Create Rule


=======Reopen .aird files=========
-Open Sirius model explore view
-open .aird file (unfold it)
-double click on the desired category file

=======Executing Transformation=========
-Execute the create operational rules workflow
-Export project to jar (Export... Plugin)
-add folder model-gen manually to the jar
-place it in plugins folder from eclipse
-restart eclipse
-create an example project mds2uml launch from MoTe
-change it/configure it so that it matches your project
-create a left side example model
-create a right side example model
-execute the workflow

=======Create Example Model=========
